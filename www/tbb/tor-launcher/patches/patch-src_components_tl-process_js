$OpenBSD$
--- src/components/tl-process.js.orig	Wed May 20 17:43:20 2015
+++ src/components/tl-process.js	Wed May 20 17:52:03 2015
@@ -310,9 +310,9 @@ TorProcessService.prototype =
       // starting tor (but we don't know how to do that).  Instead, we
       // rely on the TBB launcher to start Firefox from the right place.
       var exeFile = this._getTorFile("tor");
-      var torrcFile = this._getTorFile("torrc");
+      var torrcFile = this._getTorFile("torrc",true);
       var torrcDefaultsFile = this._getTorFile("torrc-defaults");
-      var dataDir = this._getTorFile("tordatadir");
+      var dataDir = this._getTorFile("tordatadir",true);
       var hashedPassword = this.mProtocolSvc.TorGetPassword(true);
 
       var detailsKey;
@@ -346,6 +346,7 @@ TorProcessService.prototype =
       {
         args.push("--defaults-torrc");
         args.push(torrcDefaultsFile.path);
+        args.push("--ignore-missing-torrc");
       }
       args.push("-f");
       args.push(torrcFile.path);
@@ -647,17 +648,12 @@ TorProcessService.prototype =
   {
     if (!aTorFileType)
       return null;
+    var dontCheck = (arguments.length > 1) ? arguments[1] : false;
 
-    var isRelativePath = true;
     var prefName = "extensions.torlauncher." + aTorFileType + "_path";
     var path = TorLauncherUtil.getCharPref(prefName);
-    if (path)
+    if (!path)
     {
-      var re = (TorLauncherUtil.isWindows) ?  /^[A-Za-z]:\\/ : /^\//;
-      isRelativePath = !re.test(path);
-    }
-    else
-    {
       // Get default path.
       if (TorLauncherUtil.isWindows)
       {
@@ -670,68 +666,37 @@ TorProcessService.prototype =
         else if ("tordatadir" == aTorFileType)
           path = "Data\\Tor";
       }
-      else // Linux, Mac OS and others.
+      else // BSD Unix
       {
+        // Relative to ~/.tor-browser unless absolute
         if ("tor" == aTorFileType)
-          path = "Tor/tor";
+          path = "/usr/local/bin/tor";
         else if ("torrc-defaults" == aTorFileType)
-          path = "Data/Tor/torrc-defaults";
+          path = "/etc/tor/torrc-defaults";
         else if ("torrc" == aTorFileType)
-          path = "Data/Tor/torrc";
+          path = "torrc";
         else if ("tordatadir" == aTorFileType)
-          path = "Data/Tor/";
+          path = "tor_data";
       }
     }
 
     if (!path)
       return null;
 
+    var re = (TorLauncher.isWindows) ? /^[A-Za-z]:\\/ : /^\//;
+    var isRelativePath = !re.test(path);
+
     try
     {
       var f;
       if (isRelativePath)
       {
-        // Turn into an absolute path.
         if (!this.mTorFileBaseDir)
         {
-          var topDir;
-          var appInfo = Cc["@mozilla.org/xre/app-info;1"]
-                          .getService(Ci.nsIXULAppInfo);
-          if (appInfo.ID == this.kThunderbirdID || appInfo.ID == this.kInstantbirdID)
-          {
-            topDir = Cc["@mozilla.org/file/directory_service;1"]
-                       .getService(Ci.nsIProperties).get("CurProcD", Ci.nsIFile);
-            topDir.append("extensions");
-            topDir.append(this.kTorLauncherExtPath);
-          }
-          else
-          {
-            // For Firefox, paths are relative to the top of the TBB install.
-            var tbbBrowserDepth = 0; // Windows and Linux
-            if (TorLauncherUtil.isAppVersionAtLeast("21.0"))
-            {
-              // In FF21+, CurProcD is the "browser" directory that is next to
-              // the firefox binary, e.g., <TorFileBaseDir>/Browser/browser
-              ++tbbBrowserDepth;
-            }
-            if (TorLauncherUtil.isMac)
-              tbbBrowserDepth += 2;
-
-            topDir = Cc["@mozilla.org/file/directory_service;1"]
-                    .getService(Ci.nsIProperties).get("CurProcD", Ci.nsIFile);
-            while (tbbBrowserDepth > 0)
-            {
-              var didRemove = (topDir.leafName != ".");
-              topDir = topDir.parent;
-              if (didRemove)
-                tbbBrowserDepth--;
-            }
-          }
-
-          topDir.append("TorBrowser");
-          this.mTorFileBaseDir = topDir;
+          this.mTorFileBaseDir = Cc["@mozilla.org/file/directory_service;1"]
+                                   .getService(Ci.nsIProperties)
+                                   .get("DefProfRt", Ci.nsIFile);
         }
-
         f = this.mTorFileBaseDir.clone();
         f.appendRelativePath(path);
       }
@@ -741,9 +706,11 @@ TorProcessService.prototype =
         f.initWithPath(path);
       }
 
-      if (f.exists())
+      if (dontCheck || f.exists())
       {
         try { f.normalize(); } catch(e) {}
+
+        TorLauncherLogger.log(5,"_getTorFile: "+aTorFileType+" => "+f.path);
 
         return f;
       }
